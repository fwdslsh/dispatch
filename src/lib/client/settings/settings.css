/**
 * Settings Component Styles
 *
 * Comprehensive shared styles for settings UI components following the
 * retro-terminal aesthetic with phosphor green accents. These styles provide
 * a consistent foundation for all settings pages and panels.
 *
 * Design Principles:
 * - Retro CRT terminal aesthetics with modern accessibility
 * - Phosphor green glowing accents (#2ee66b)
 * - Monospace typography for labels and technical content
 * - Clear visual hierarchy with consistent spacing
 * - WCAG 2.1 Level AA compliant (min 44px touch targets, proper contrast)
 * - Container query support for responsive layouts
 *
 * NOTE: Common utility classes are defined in utilities.css
 * This file contains settings-specific component styling
 */

/* ==========================================================================
   1. Settings Container Styles
   ========================================================================== */

/**
 * Main container for settings pages
 * Provides consistent layout, spacing, and backdrop styling
 */
.settings-container {
	width: 100%;
	gap: var(--space-2);
	margin: 0 auto;
	padding: var(--space-5);
	background: var(--surface);
	border: 1px solid var(--line);
	box-shadow:
		0 4px 12px color-mix(in oklab, var(--bg) 80%, black),
		inset 0 1px 0 var(--primary-glow-10);
}

/**
 * Settings panel - smaller contained sections within pages
 * Used for embedded settings UI within other components
 */
.settings-panel {
	background: var(--elev);
	border: 1px solid var(--line);
	padding: var(--space-4);
	margin-bottom: var(--space-4);
	box-shadow: 0 2px 4px color-mix(in oklab, var(--bg) 85%, black);
}

/**
 * Settings header section with title and optional description
 */
.settings-header {
	margin-bottom: var(--space-5);
	padding-bottom: var(--space-4);
	border-bottom: 1px solid var(--line);
}

.settings-title {
	font-family: var(--font-accent);
	font-size: var(--font-size-4);
	color: var(--primary);
	margin: 0 0 var(--space-2) 0;
	text-shadow: 0 0 10px var(--primary-glow);
	letter-spacing: 0.5px;
}

.settings-description {
	font-family: var(--font-mono);
	font-size: var(--font-size-1);
	color: var(--muted);
	margin: 0;
	line-height: 1.6;
}

/* ==========================================================================
   2. Form Layout Structures
   ========================================================================== */

/**
 * Form group - logical grouping of related form fields
 * Provides consistent spacing between field groups
 */
.form-group {
	margin-bottom: var(--space-5);
}

.form-group:last-child {
	margin-bottom: 0;
}

/**
 * Settings section - major grouping with heading
 * Used to organize settings into categories
 */
.settings-section {
	margin-bottom: var(--space-6);
	padding: var(--space-4);
	background: var(--surface-primary-98);
	border-radius: var(--radius-sm);
	border: 1px solid var(--primary-glow-15);
}

.settings-section:last-child {
	margin-bottom: 0;
}

.settings-section-title {
	font-family: var(--font-mono);
	font-size: var(--font-size-3);
	font-weight: 600;
	color: var(--text);
	margin: 0 0 var(--space-4) 0;
	padding-bottom: var(--space-2);
	border-bottom: 1px solid var(--line);
	letter-spacing: 0.3px;
}

.settings-section-description {
	font-family: var(--font-mono);
	font-size: var(--font-size-1);
	color: var(--muted);
	margin: 0 0 var(--space-4) 0;
	line-height: 1.5;
}

/**
 * Field row - horizontal layout for label + input
 * Responsive: stacks on narrow containers
 */
.field-row {
	display: flex;
	flex-direction: column;
	gap: var(--space-2);
	margin-bottom: var(--space-4);
}

.field-row:last-child {
	margin-bottom: 0;
}

/* Horizontal layout on wider containers */
@container (min-width: 500px) {
	.field-row {
		flex-direction: row;
		align-items: center;
		gap: var(--space-4);
	}

	.field-row > label {
		flex: 0 0 200px;
	}

	.field-row > input,
	.field-row > select,
	.field-row > textarea {
		flex: 1;
	}
}

/* ==========================================================================
   3. Labels and Typography
   ========================================================================== */

/**
 * Form labels with monospace styling for technical feel
 */
label {
	display: block;
	font-family: var(--font-mono);
	font-size: var(--font-size-1);
	font-weight: 500;
	color: var(--text);
	margin-bottom: var(--space-2);
	letter-spacing: 0.2px;
}

/**
 * Required field indicator
 */
label.required::after {
	content: ' *';
	color: var(--err);
	font-weight: bold;
}

/**
 * Helper text for additional context
 */
.helper-text {
	display: block;
	font-family: var(--font-mono);
	font-size: var(--font-size-0);
	color: var(--muted);
	margin-top: var(--space-1);
	line-height: 1.4;
}

/**
 * Field description - more detailed explanation
 */
.field-description {
	font-family: var(--font-mono);
	font-size: var(--font-size-1);
	color: var(--muted);
	margin-top: var(--space-2);
	line-height: 1.5;
	padding: var(--space-2);
	background: var(--surface-primary-98);
	border-left: 2px solid var(--primary-glow-30);
	border-radius: var(--radius-xs);
}

/* ==========================================================================
   4. Form Input Elements
   ========================================================================== */

/*
 * Form input styles (text, email, password, number, url, tel, search, select, textarea)
 * are defined globally in retro.css
 *
 * Available input styling includes:
 * - Base styles with WCAG-compliant 44px min-height
 * - Focus states with phosphor green glow
 * - Hover effects
 * - Disabled and invalid states
 * - Textarea and select-specific styles
 * - Number input spinner controls
 */

/* ==========================================================================
   5. Checkbox and Toggle Styles
   ========================================================================== */

/**
 * Checkbox container for accessible layout
 * Places checkbox and label on same line with proper spacing
 */
.checkbox-container {
	display: flex;
	align-items: center;
	gap: var(--space-3);
	min-height: 44px; /* WCAG touch target */
	padding: var(--space-2) 0;
	cursor: pointer;
}

.checkbox-container input[type='checkbox'] {
	width: 20px;
	height: 20px;
	min-height: 20px;
	margin: 0;
	cursor: pointer;
	accent-color: var(--primary);
	flex-shrink: 0;
}

.checkbox-container label {
	margin: 0;
	cursor: pointer;
	flex: 1;
	user-select: none;
}

/**
 * Enhanced checkbox with custom styling
 */
.checkbox-enhanced {
	position: relative;
	display: flex;
	align-items: center;
	gap: var(--space-3);
	min-height: 44px;
	padding: var(--space-2);
	border-radius: var(--radius-xs);
	transition: background 0.2s ease;
}

.checkbox-enhanced:hover {
	background: var(--surface-primary-98);
}

.checkbox-enhanced input[type='checkbox'] {
	position: relative;
	appearance: none;
	width: 20px;
	height: 20px;
	border: 2px solid var(--line);
	border-radius: var(--radius-xs);
	background: var(--bg);
	cursor: pointer;
	transition: all 0.2s ease;
	flex-shrink: 0;
}

.checkbox-enhanced input[type='checkbox']:hover {
	border-color: var(--primary-glow-40);
}

.checkbox-enhanced input[type='checkbox']:focus {
	outline: none;
	border-color: var(--primary);
	box-shadow: 0 0 0 3px var(--primary-glow-25);
}

.checkbox-enhanced input[type='checkbox']:checked {
	background: var(--primary);
	border-color: var(--primary);
}

.checkbox-enhanced input[type='checkbox']:checked::after {
	content: '';
	position: absolute;
	top: 2px;
	left: 6px;
	width: 4px;
	height: 9px;
	border: solid var(--bg);
	border-width: 0 2px 2px 0;
	transform: rotate(45deg);
}

.checkbox-enhanced label {
	margin: 0;
	cursor: pointer;
	flex: 1;
}

/* ==========================================================================
   6. Button Styles
   ========================================================================== */

/*
 * Button styles available from retro.css:
 * - .button (base button styles)
 * - .button.primary (primary action buttons with glowing effect)
 * - .button.secondary (secondary action buttons - subtle style)
 * - .button.danger (destructive action buttons)
 *
 * All buttons include:
 * - WCAG-compliant 44px min-height
 * - Focus states with proper outlines
 * - Hover and active states
 * - Disabled state styling
 */

/**
 * Button group - horizontal layout for organizing multiple buttons
 */
.button-group {
	display: flex;
	gap: var(--space-3);
	flex-wrap: wrap;
	align-items: center;
}

.button-group.right {
	justify-content: flex-end;
}

.button-group.center {
	justify-content: center;
}

/**
 * Tunnel action button - consistent sizing for tunnel control buttons
 */
.tunnel-action-button {
	min-width: 120px;
	min-height: 44px;
}

/**
 * Monospace input styling - for technical inputs like URLs and subdomains
 */
.input-monospace {
	font-family: var(--font-mono);
	font-size: 0.9rem;
}

/* ==========================================================================
   7. Status Messages and Alerts
   ========================================================================== */

/**
 * Base alert styling with icon support
 */
.alert {
	padding: var(--space-3) var(--space-4);
	margin-bottom: var(--space-4);
	border-radius: var(--radius-xs);
	font-family: var(--font-mono);
	font-size: var(--font-size-1);
	line-height: 1.5;
	border-left: 4px solid;
	box-shadow: 0 2px 4px color-mix(in oklab, var(--bg) 90%, black);
}

/**
 * Success alert - positive feedback
 */
.alert-success {
	background: color-mix(in oklab, var(--ok) 15%, var(--surface));
	border-left-color: var(--ok);
	color: var(--text);
}

.alert-success::before {
	content: '✓ ';
	color: var(--ok);
	font-weight: bold;
	margin-right: var(--space-2);
}

/**
 * Error alert - critical issues
 */
.alert-error {
	background: color-mix(in oklab, var(--err) 15%, var(--surface));
	border-left-color: var(--err);
	color: var(--text);
}

.alert-error::before {
	content: '✗ ';
	color: var(--err);
	font-weight: bold;
	margin-right: var(--space-2);
}

/**
 * Warning alert - caution needed
 */
.alert-warning {
	background: color-mix(in oklab, var(--warn) 15%, var(--surface));
	border-left-color: var(--warn);
	color: var(--text);
}

.alert-warning::before {
	content: '⚠ ';
	color: var(--warn);
	font-weight: bold;
	margin-right: var(--space-2);
}

/**
 * Info alert - informational messages
 */
.alert-info {
	background: color-mix(in oklab, var(--info) 15%, var(--surface));
	border-left-color: var(--info);
	color: var(--text);
}

.alert-info::before {
	content: 'ℹ ';
	color: var(--info);
	font-weight: bold;
	margin-right: var(--space-2);
}

/**
 * Inline validation messages
 */
.validation-message {
	display: block;
	font-family: var(--font-mono);
	font-size: var(--font-size-0);
	margin-top: var(--space-1);
	padding: var(--space-1) var(--space-2);
	border-radius: var(--radius-xs);
}

.validation-message.error {
	color: var(--err);
	background: var(--err-dim);
}

.validation-message.success {
	color: var(--ok);
	background: color-mix(in oklab, var(--ok) 20%, transparent);
}

/* ==========================================================================
   8. Environment Variable Indicators
   ========================================================================== */

/**
 * Environment variable fallback message
 * Shows when settings use environment variable defaults
 */
.env-indicator {
	display: inline-flex;
	align-items: center;
	gap: var(--space-2);
	padding: var(--space-1) var(--space-2);
	font-family: var(--font-mono);
	font-size: var(--font-size-0);
	color: var(--accent-cyan);
	background: color-mix(in oklab, var(--accent-cyan) 10%, var(--surface));
	border: 1px solid color-mix(in oklab, var(--accent-cyan) 30%, transparent);
	border-radius: var(--radius-xs);
	margin-top: var(--space-1);
}

.env-indicator::before {
	content: '$';
	font-weight: bold;
	color: var(--accent-cyan);
}

/**
 * Environment variable badge - inline indicator
 */
.env-badge {
	display: inline-block;
	padding: 2px var(--space-2);
	font-family: var(--font-mono);
	font-size: 10px;
	font-weight: 600;
	color: var(--bg);
	background: var(--accent-cyan);
	border-radius: var(--radius-xs);
	text-transform: uppercase;
	letter-spacing: 0.5px;
	vertical-align: middle;
	margin-left: var(--space-2);
}

/* ==========================================================================
   9. Loading and Progress States
   ========================================================================== */

/*
 * Loading spinner styles available from animations.css:
 * - .loading-spinner (default 20px spinner)
 * - .loading-spinner--sm (small 16px spinner)
 * - .loading-spinner--lg (large 32px spinner)
 *
 * These include the spin animation and proper styling for loading indicators.
 */

/**
 * Skeleton loading states
 */
.skeleton {
	background: linear-gradient(90deg, var(--surface) 25%, var(--elev) 50%, var(--surface) 75%);
	background-size: 200% 100%;
	animation: skeleton-loading 1.5s ease-in-out infinite;
	border-radius: var(--radius-xs);
}

@keyframes skeleton-loading {
	0% {
		background-position: 200% 0;
	}
	100% {
		background-position: -200% 0;
	}
}

/* ==========================================================================
   10. Responsive Utilities and Container Queries
   ========================================================================== */

/**
 * Container query context for responsive settings panels
 */
.settings-responsive {
	container-type: inline-size;
	container-name: settings;
}

/**
 * Responsive layout adjustments
 */
@container settings (max-width: 600px) {
	.settings-container {
		padding: var(--space-4);
	}

	.settings-title {
		font-size: var(--font-size-3);
	}

	.button-group {
		flex-direction: column;
		width: 100%;
	}

	.button-group button {
		width: 100%;
	}

	.field-row {
		flex-direction: column;
	}

	.field-row > label {
		flex: 1;
	}
}

/**
 * Mobile-specific adjustments
 */
@media (max-width: 768px) {
	.settings-container {
		max-width: 100%;
		margin: 0;
		border-radius: 0;
		border-left: none;
		border-right: none;
	}

	.settings-section {
		padding: var(--space-3);
	}
}

/* ==========================================================================
   11. Accessibility Enhancements
   ========================================================================== */

/**
 * Focus visible for keyboard navigation
 */
*:focus-visible {
	outline: 2px solid var(--primary);
	outline-offset: 2px;
}

/**
 * Screen reader only content
 */
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}

/**
 * Reduced motion support
 */
@media (prefers-reduced-motion: reduce) {
	*,
	*::before,
	*::after {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
	}

	.loading-spinner,
	.skeleton {
		animation: none;
	}
}

/**
 * High contrast mode support
 */
@media (prefers-contrast: high) {
	input[type='text'],
	input[type='number'],
	input[type='email'],
	input[type='password'],
	input[type='url'],
	input[type='tel'],
	input[type='search'],
	select,
	textarea {
		border-width: 2px;
	}

	.btn-primary,
	.btn-secondary,
	.btn-danger {
		border: 2px solid currentColor;
	}
}

/* ==========================================================================
   12. Utility Classes
   ========================================================================== */

/*
 * NOTE: Common utility classes have been moved to utilities.css
 * Import utilities.css for spacing (margin, padding, gap), flex, text, and display utilities
 * Settings-specific utilities remain here
 */
